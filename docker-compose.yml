# https://github.com/DataTalksClub/data-engineering-zoomcamp/blob/3e7dfb6857db2dda857199d4e3107e12f2893473/week_6_stream_processing/python/docker/kafka/docker-compose.yml
version: '3.6'
x-build:
  &default-build
  context: .
  dockerfile: docker/prefect_docker

x-app-vars:
  &default-app-vars
  PREFECT_ORION_API_HOST: 0.0.0.0
  PREFECT_ORION_DATABASE_CONNECTION_URL: postgresql+asyncpg://root:admin@pgdatabase:5432/db
  PREFECT_ORION_ANALYTICS_ENABLED: "false"
  PREFECT_LOGGING_SERVER_LEVEL: DEBUG
  PREFECT_LOCAL_STORAGE_PATH: "/tmp/prefect/storage"
services:
  orion:
    build:
      <<: *default-build
      target: base
    container_name: orion
    restart: on-failure
    entrypoint: [ "prefect", "orion", "start", "--host", "0.0.0.0" ]
    ports:
      - 4200:4200
    environment:
      <<: *default-app-vars
      PREFECT_API_URL: http://localhost:4200/api
    depends_on:
      - pgdatabase
    extra_hosts:
      - "host.docker.internal:host-gateway"
  prefect-agent:
    build:
      <<: *default-build
      target: agent
    container_name: prefect-agent
    command:
      - prefect
      - agent
      - start
      - -q
      - default
    depends_on:
      - orion
      - zookeeper
      - broker
      - schema-registry
    environment:
      <<: *default-app-vars
      PREFECT_API_URL: http://host.docker.internal:4200/api
    volumes:
      - "./flows:/opt/prefect/flows"
      - "./data/prefect_data:/opt/prefect/data"
      - "./prefect_deployments:/opt/prefect/deployments"
      - "./resources:/opt/resources"
      - "./utilities:/opt/utilities"
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - "host.docker.internal:host-gateway"
  pgdatabase:
    image: ubuntu/postgres:latest
    container_name: pgdatabase
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=db
      # - PGDTA=/var/lib/postgresql/pgdata
    volumes:
      - "./data/db_data:/var/lib/postgresql/data:rm"
      # - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5433:5432"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  pgadmin:
    image: dpage/pgadmin4:6.20
    container_name: pgadmin
    user: root
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8090:80"
    volumes:
      - "./data/pgadmin_data:/var/lib/pgadmin"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  datafeeder:
    build:
      context: .
      dockerfile: docker/datafeeder_docker
    container_name: datafeeder
    depends_on:
      - broker
      - zookeeper
      - schema-registry
    tty: true
    environment:
      # KAFKA_SCHEMA_REGISTRY_URL: "schema-registry:8081"
      KAFKA_BOOSTRAP_SERVER_NAME: kafka
      KAFKA_BOOSTRAP_SERVER_PORT: 9092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # SCHEMA_REGISTRY_SERVER: schema-registry
      SCHEMA_REGISTRY_SERVER_PORT: 8081
    volumes:
      - ./ingest:/opt/datafeeder/
      - ./resources:/opt/resources/
      - ./data/tmp:/tmp/
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      # - "${DOCKER_HOST_IP}:8084:80"
      # - "${DOCKER_HOST_IP}:8000:8000"
      - "127.0.0.1:8084:80"
      - "127.0.0.1:8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "./data/zookeeper_data:/var/lib/zookeeper/data"
      - "./data/zookeeper_log:/var/lib/zookeeper/log"
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
       ALLOW_ANONYMOUS_LOGIN: yes
       ZOOKEEPER_CLIENT_PORT: 2181
       ZOOKEEPER_TICK_TIME: 2000
    extra_hosts:
      - "host.docker.internal:host-gateway"
  broker:
    image: confluentinc/cp-kafka:7.2.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "29094:29092"
    volumes:
      - "./data/kafka_data:/var/lib/kafka/data"
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT #,LISTENER_DOCKER_EXTERNAL:PLAINTEXT 
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://host.docker.internal:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_SCHEMA_REGISTRY_URL: "schema-registry:8081"
    depends_on:
      - zookeeper
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"


  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      # SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181" #(depreciated)
      SCHEMA_REGISTRY_KAFKA_BROKERS: PLAINTEXT://broker:29092
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29092"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_LISTENERS: "http://schema-registry:8081" #(default: http://0.0.0.0:8081)
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_DEBUG: true
    restart: on-failure
    extra_hosts:
      - "host.docker.internal:host-gateway"
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.2.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  kafka-rest:
    image: confluentinc/cp-kafka-rest:7.2.0
    hostname: kafka-rest
    container_name: kafka-rest
    ports:
      - "8082:8082"
    depends_on:
      - schema-registry
      - broker
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://localhost:8081'
      KAFKA_REST_HOST_NAME: localhost
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
  dbt-bq-train:
    build:
      context: .
      dockerfile: docker/dbt_docker
      target: dbt-bigquery
    container_name: dbt-bq-train
    working_dir: /usr/app/dbt/dtc_de_train
    ports:
      - "8092:8080"
    tty: true
    volumes:
      - ./dbt-bq-train:/usr/app/dbt
      - ./profile-yml/:/root/.dbt
      - ~/.config/gcloud/dtc-de-project-380810-af97d0ef23ad.json:/.google/credentials/google_credentials.json
  dataviz:
    image: metabase/metabase
    container_name: metabase
    restart: always
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=db
      - MB_DB_PORT=5432
      - MB_DB_USER=root
      - MB_DB_PASS=admin
      - MB_DB_HOST=pgdatabase
      # - MB_DB_FILE=/metabase-data/metabase.db
    depends_on:
      - pgdatabase
    volumes:
      - "./data/dataviz_data:/metabase-data"
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  ofelia_scheduler:
    image: mcuadros/ofelia:latest
    container_name: ofelia_sheduler
    # restart: on-failure
    command: daemon --config=/etc/ofelia.conf
    volumes:
      - ./scheduler.conf:/etc/ofelia.conf
      - ./data/ofelia_logs/scheduler:/etc/logs
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - "host.docker.internal:host-gateway"